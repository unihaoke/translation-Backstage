<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzu.translate.dao.RewardMapper">
  <resultMap id="BaseResultMap" type="com.hzu.translate.entity.Reward">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reward_status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_schedule" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reward_experience" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="total_attention" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_money" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="upload_file" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="deadline" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="categoryId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hzu.translate.entity.Reward">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reward_status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_schedule" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reward_experience" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="total_attention" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_money" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="upload_file" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="deadline" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="categoryId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="reward_information" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>

  <resultMap id="RewardUserVoMap" type="com.hzu.translate.vo.UserRewardVo2">
      <result column="id" javaType="java.lang.Long" jdbcType="BIGINT" property="rewardId"/>
      <result column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" property="userId" />
      <result column="reward_status" javaType="java.lang.Integer" jdbcType="INTEGER" property="rewardStatus"/>
      <result column="reward_schedule" javaType="java.lang.String" jdbcType="VARCHAR" property="rewardSchedule"/>
      <result column="reward_experience" javaType="java.lang.Integer" jdbcType="INTEGER" property="rewardExperience" />
      <result column="total_attention" javaType="java.lang.Integer" jdbcType="INTEGER" property="totalAttention" />
      <result column="reward_type" javaType="java.lang.Integer" jdbcType="INTEGER" property="rewardType"/>
      <result column="is_get" javaType="java.lang.Integer" jdbcType="INTEGER" property="isGet"/>
      <result column="is_attention" javaType="java.lang.Integer" jdbcType="INTEGER" property="isAttention"/>
      <result column="reward_money" javaType="java.lang.Integer" jdbcType="INTEGER" property="rewardMoney" />
      <result column="upload_file" javaType="java.lang.String" jdbcType="VARCHAR" property="uploadFile"/>
      <result column="deadline" javaType="java.util.Date" jdbcType="TIMESTAMP" property="deadline"/>
      <result column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <result column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <result column="reward_information" javaType="java.lang.String" jdbcType="LONGVARCHAR" property="rewardInformation"/>
      <result column="translation" javaType="java.lang.String" jdbcType="LONGVARCHAR"  property="translation"/>
      <result column="is_Submission" javaType="java.lang.Integer" jdbcType="INTEGER" property="is_Submission"/>
  </resultMap>


  <sql id="Base_Column_List">
    id, user_id, reward_status, reward_schedule, reward_experience, total_attention, 
    reward_type, reward_money, upload_file, deadline,categoryId, created_time, updated_time
  </sql>
  <sql id="Blob_Column_List">
    reward_information
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from trans_reward
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from trans_reward
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hzu.translate.entity.Reward" useGeneratedKeys="true" keyProperty="id">
    insert into trans_reward (id, user_id, reward_status, 
      reward_schedule, reward_experience, total_attention, 
      reward_type, reward_money, upload_file,categoryId,
      deadline, created_time, updated_time, 
      reward_information)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{rewardStatus,jdbcType=INTEGER}, 
      #{rewardSchedule,jdbcType=VARCHAR}, #{rewardExperience,jdbcType=INTEGER}, 0,
      #{rewardType,jdbcType=INTEGER}, #{rewardMoney,jdbcType=INTEGER}, #{uploadFile,jdbcType=VARCHAR},#{categoryId,jdbcType=INTEGER},
      #{deadline,jdbcType=DATE}, now(), now(),
      #{rewardInformation,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hzu.translate.entity.Reward">
    insert into trans_reward
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="rewardStatus != null">
        reward_status,
      </if>
      <if test="rewardSchedule != null">
        reward_schedule,
      </if>
      <if test="rewardExperience != null">
        reward_experience,
      </if>
      <if test="totalAttention != null">
        total_attention,
      </if>
      <if test="rewardType != null">
        reward_type,
      </if>
      <if test="rewardMoney != null">
        reward_money,
      </if>
      <if test="uploadFile != null">
        upload_file,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="categoryId != null">
        categoryId,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="rewardInformation != null">
        reward_information,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="rewardStatus != null">
        #{rewardStatus,jdbcType=INTEGER},
      </if>
      <if test="rewardSchedule != null">
        #{rewardSchedule,jdbcType=VARCHAR},
      </if>
      <if test="rewardExperience != null">
        #{rewardExperience,jdbcType=INTEGER},
      </if>
      <if test="totalAttention != null">
        #{totalAttention,jdbcType=INTEGER},
      </if>
      <if test="rewardType != null">
        #{rewardType,jdbcType=INTEGER},
      </if>
      <if test="rewardMoney != null">
        #{rewardMoney,jdbcType=INTEGER},
      </if>
      <if test="uploadFile != null">
        #{uploadFile,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        now(),
      </if>
      <if test="rewardInformation != null">
        #{rewardInformation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzu.translate.entity.Reward">
    update trans_reward
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="rewardStatus != null">
        reward_status = #{rewardStatus,jdbcType=INTEGER},
      </if>
      <if test="rewardSchedule != null">
        reward_schedule = #{rewardSchedule,jdbcType=VARCHAR},
      </if>
      <if test="rewardExperience != null">
        reward_experience = #{rewardExperience,jdbcType=INTEGER},
      </if>
      <if test="totalAttention != null">
        total_attention = #{totalAttention,jdbcType=INTEGER},
      </if>
      <if test="rewardType != null">
        reward_type = #{rewardType,jdbcType=INTEGER},
      </if>
      <if test="rewardMoney != null">
        reward_money = #{rewardMoney,jdbcType=INTEGER},
      </if>
      <if test="uploadFile != null">
        upload_file = #{uploadFile,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = now(),
      </if>
      <if test="rewardInformation != null">
        reward_information = #{rewardInformation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hzu.translate.entity.Reward">
    update trans_reward
    set user_id = #{userId,jdbcType=VARCHAR},
      reward_status = #{rewardStatus,jdbcType=INTEGER},
      reward_schedule = #{rewardSchedule,jdbcType=VARCHAR},
      reward_experience = #{rewardExperience,jdbcType=INTEGER},
      total_attention = #{totalAttention,jdbcType=INTEGER},
      reward_type = #{rewardType,jdbcType=INTEGER},
      reward_money = #{rewardMoney,jdbcType=INTEGER},
      upload_file = #{uploadFile,jdbcType=VARCHAR},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      categoryId = #{categoryId,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = now(),
      reward_information = #{rewardInformation,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzu.translate.entity.Reward">
    update trans_reward
    set user_id = #{userId,jdbcType=VARCHAR},
      reward_status = #{rewardStatus,jdbcType=INTEGER},
      reward_schedule = #{rewardSchedule,jdbcType=VARCHAR},
      reward_experience = #{rewardExperience,jdbcType=INTEGER},
      total_attention = #{totalAttention,jdbcType=INTEGER},
      reward_type = #{rewardType,jdbcType=INTEGER},
      reward_money = #{rewardMoney,jdbcType=INTEGER},
      upload_file = #{uploadFile,jdbcType=VARCHAR},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      categoryId = #{categoryId,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findAll"  resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from trans_reward
    ORDER BY created_time DESC
  </select>
  <select id="findRewardByType" parameterType="map" resultMap="ResultMapWithBLOBs">
    select  r.id, r.user_id, r.reward_status, r.reward_schedule, r.reward_experience, r.total_attention,
    r.reward_type, r.reward_money, r.upload_file, r.deadline,r.categoryId, r.created_time, r.updated_time,r.reward_information
    FROM trans_reward r
    where r.categoryId = #{type,jdbcType=INTEGER}  AND r.id not in (select reward_id from trans_reward_user where user_id =#{userId,jdbcType=VARCHAR}) AND r.user_id !=#{userId,jdbcType=VARCHAR}
    ORDER BY r.created_time DESC
  </select>
  <select id="findRewardByFreeMoney" parameterType="string"  resultMap="ResultMapWithBLOBs">
   select  id, c.user_id, c.reward_status,c.reward_schedule, c.reward_experience, c.total_attention,
    c.reward_type, c.reward_money,c.upload_file, c.deadline,c.categoryId, c.created_time, c.updated_time,c.reward_information
    FROM trans_reward c
    where  reward_money =0  AND c.user_id!=#{userId,jdbcType=VARCHAR} AND id not in (select reward_id from trans_reward_user where user_id =#{userId,jdbcType=VARCHAR})
    ORDER BY created_time DESC
  </select>
  <select id="findRewardByMoney" resultMap="ResultMapWithBLOBs">
    select  id, c.user_id, c.reward_status,c.reward_schedule, c.reward_experience, c.total_attention,
    c.reward_type, c.reward_money,c.upload_file, c.deadline, c.categoryId,c.created_time, c.updated_time,c.reward_information
    FROM trans_reward c
    where  reward_money >0  AND c.user_id!=#{userId,jdbcType=VARCHAR} AND id not in (select reward_id from trans_reward_user where user_id =#{userId,jdbcType=VARCHAR})
    ORDER BY created_time DESC
  </select>
  <select id="findRewardByUserId" parameterType="String" resultMap="RewardUserVoMap">
    select
    c.id, c.user_id, c.reward_status, c.reward_schedule, c.reward_experience, total_attention,
    reward_type, reward_money, upload_file, deadline, created_time, updated_time,reward_information
    ,is_get,is_attention,is_Submission
    FROM trans_reward c, trans_reward_user s
    WHERE c.user_id =  #{userId,jdbcType=VARCHAR} OR id  in (select reward_id from trans_reward_user where user_id =#{userId,jdbcType=VARCHAR})
    GROUP BY id HAVING COUNT(1) >0
    ORDER BY c.created_time DESC
  </select>

  <select id="findAllByUser" parameterType="string" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from trans_reward c
    WHERE c.user_id!=#{userId,jdbcType=VARCHAR} AND id not in (select reward_id from trans_reward_user where user_id =#{userId,jdbcType=VARCHAR})
    ORDER BY created_time DESC
  </select>


</mapper>