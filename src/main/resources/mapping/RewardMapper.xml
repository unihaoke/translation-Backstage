<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzu.translate.dao.RewardMapper">
  <resultMap id="BaseResultMap" type="com.hzu.translate.entity.Reward">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reward_status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_schedule" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reward_experience" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="total_attention" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_money" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="upload_file" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="deadline" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hzu.translate.entity.Reward">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reward_status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_schedule" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reward_experience" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="total_attention" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_money" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="upload_file" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="deadline" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="reward_information" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, reward_status, reward_schedule, reward_experience, total_attention, 
    reward_type, reward_money, upload_file, deadline, created_time, updated_time
  </sql>
  <sql id="Blob_Column_List">
    reward_information
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from trans_reward
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from trans_reward
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hzu.translate.entity.Reward">
    insert into trans_reward (id, user_id, reward_status, 
      reward_schedule, reward_experience, total_attention, 
      reward_type, reward_money, upload_file, 
      deadline, created_time, updated_time, 
      reward_information)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{rewardStatus,jdbcType=INTEGER}, 
      #{rewardSchedule,jdbcType=VARCHAR}, #{rewardExperience,jdbcType=INTEGER}, 0,
      #{rewardType,jdbcType=INTEGER}, #{rewardMoney,jdbcType=INTEGER}, #{uploadFile,jdbcType=VARCHAR}, 
      #{deadline,jdbcType=DATE}, now(), now(),
      #{rewardInformation,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hzu.translate.entity.Reward">
    insert into trans_reward
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="rewardStatus != null">
        reward_status,
      </if>
      <if test="rewardSchedule != null">
        reward_schedule,
      </if>
      <if test="rewardExperience != null">
        reward_experience,
      </if>
      <if test="totalAttention != null">
        total_attention,
      </if>
      <if test="rewardType != null">
        reward_type,
      </if>
      <if test="rewardMoney != null">
        reward_money,
      </if>
      <if test="uploadFile != null">
        upload_file,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="rewardInformation != null">
        reward_information,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="rewardStatus != null">
        #{rewardStatus,jdbcType=INTEGER},
      </if>
      <if test="rewardSchedule != null">
        #{rewardSchedule,jdbcType=VARCHAR},
      </if>
      <if test="rewardExperience != null">
        #{rewardExperience,jdbcType=INTEGER},
      </if>
      <if test="totalAttention != null">
        #{totalAttention,jdbcType=INTEGER},
      </if>
      <if test="rewardType != null">
        #{rewardType,jdbcType=INTEGER},
      </if>
      <if test="rewardMoney != null">
        #{rewardMoney,jdbcType=INTEGER},
      </if>
      <if test="uploadFile != null">
        #{uploadFile,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=DATE},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rewardInformation != null">
        #{rewardInformation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzu.translate.entity.Reward">
    update trans_reward
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="rewardStatus != null">
        reward_status = #{rewardStatus,jdbcType=INTEGER},
      </if>
      <if test="rewardSchedule != null">
        reward_schedule = #{rewardSchedule,jdbcType=VARCHAR},
      </if>
      <if test="rewardExperience != null">
        reward_experience = #{rewardExperience,jdbcType=INTEGER},
      </if>
      <if test="totalAttention != null">
        total_attention = #{totalAttention,jdbcType=INTEGER},
      </if>
      <if test="rewardType != null">
        reward_type = #{rewardType,jdbcType=INTEGER},
      </if>
      <if test="rewardMoney != null">
        reward_money = #{rewardMoney,jdbcType=INTEGER},
      </if>
      <if test="uploadFile != null">
        upload_file = #{uploadFile,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=DATE},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = now(),
      </if>
      <if test="rewardInformation != null">
        reward_information = #{rewardInformation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hzu.translate.entity.Reward">
    update trans_reward
    set user_id = #{userId,jdbcType=BIGINT},
      reward_status = #{rewardStatus,jdbcType=INTEGER},
      reward_schedule = #{rewardSchedule,jdbcType=VARCHAR},
      reward_experience = #{rewardExperience,jdbcType=INTEGER},
      total_attention = #{totalAttention,jdbcType=INTEGER},
      reward_type = #{rewardType,jdbcType=INTEGER},
      reward_money = #{rewardMoney,jdbcType=INTEGER},
      upload_file = #{uploadFile,jdbcType=VARCHAR},
      deadline = #{deadline,jdbcType=DATE},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = now(),
      reward_information = #{rewardInformation,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzu.translate.entity.Reward">
    update trans_reward
    set user_id = #{userId,jdbcType=BIGINT},
      reward_status = #{rewardStatus,jdbcType=INTEGER},
      reward_schedule = #{rewardSchedule,jdbcType=VARCHAR},
      reward_experience = #{rewardExperience,jdbcType=INTEGER},
      total_attention = #{totalAttention,jdbcType=INTEGER},
      reward_type = #{rewardType,jdbcType=INTEGER},
      reward_money = #{rewardMoney,jdbcType=INTEGER},
      upload_file = #{uploadFile,jdbcType=VARCHAR},
      deadline = #{deadline,jdbcType=DATE},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findAll" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from trans_reward
    ORDER BY created_time DESC
  </select>
  <select id="findRewardByType" parameterType="long" resultMap="ResultMapWithBLOBs">
    select  r.id, r.user_id, r.reward_status, r.reward_schedule, r.reward_experience, r.total_attention,
    r.reward_type, r.reward_money, r.upload_file, r.deadline, r.created_time, r.updated_time,r.reward_information
    FROM trans_reward r,trans_reward_category c
    where c.parent_id = #{type,jdbcType=INTEGER} AND c.reward_id = r.id
    ORDER BY r.created_time DESC
  </select>
  <select id="findRewardByFreeMoney"  resultMap="ResultMapWithBLOBs">
    select  id, user_id, reward_status,reward_schedule, reward_experience, total_attention,
    reward_type, reward_money,upload_file, deadline, created_time, updated_time,reward_information
    FROM trans_reward
    where  reward_money =0
    ORDER BY created_time DESC
  </select>
  <select id="findRewardByMoney" resultMap="ResultMapWithBLOBs">
    select  id, user_id, reward_status,reward_schedule, reward_experience, total_attention,
    reward_type, reward_money,upload_file, deadline, created_time, updated_time,reward_information
    FROM trans_reward
    where  reward_money >0
    ORDER BY created_time DESC
  </select>
  <select id="findRewardByUserId" parameterType="String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    FROM trans_reward
    WHERE user_id = #{userId,jdbcType=BIGINT}
    ORDER BY created_time DESC
  </select>
</mapper>