<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzu.translate.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.hzu.translate.entity.User">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="profession" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_level" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="current_experience" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, email, profession, user_level, current_experience, created_time, updated_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="string" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trans_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="string">
    delete from trans_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hzu.translate.entity.User">
    insert into trans_user (id, user_name, email, 
      profession, user_level, current_experience, 
      created_time, updated_time)
    values (#{id,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
      #{profession,jdbcType=VARCHAR}, #{userLevel,jdbcType=VARCHAR}, #{currentExperience,jdbcType=BIGINT}, 
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.hzu.translate.entity.User">
    insert into trans_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="userLevel != null">
        user_level,
      </if>
      <if test="currentExperience != null">
        current_experience,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null">
        #{userLevel,jdbcType=VARCHAR},
      </if>
      <if test="currentExperience != null">
        #{currentExperience,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        now(),
      </if>
      <if test="updatedTime != null">
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzu.translate.entity.User">
    update trans_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null">
        user_level = #{userLevel,jdbcType=VARCHAR},
      </if>
      <if test="currentExperience != null">
        current_experience = #{currentExperience,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = now(),
      </if>
      <if test="updatedTime != null">
        updated_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzu.translate.entity.User">
    update trans_user
    set user_name = #{userName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      user_level = #{userLevel,jdbcType=VARCHAR},
      current_experience = #{currentExperience,jdbcType=BIGINT},
      created_time = now(),
      updated_time = now()
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectUserId" parameterType="string" resultType="int">
    SELECT count(*)
    FROM trans_user
    WHERE id = #{id,jdbcType=VARCHAR}
  </select>
</mapper>